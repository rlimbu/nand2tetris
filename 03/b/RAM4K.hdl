// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Completed: 2018-04-06
	
    // select the RAM512 unit to load if the load bit is set
    DMux8Way(in=load, sel=address[9..11], a=loadram0, b=loadram1, c=loadram2, d=loadram3, e=loadram4, f=loadram5, g=loadram6, h=loadram7);
	
    // select the register to load or read from within each RAM512 unit
    RAM512(in=in, load=loadram0, address=address[0..8], out=outram0);
    RAM512(in=in, load=loadram1, address=address[0..8], out=outram1);
    RAM512(in=in, load=loadram2, address=address[0..8], out=outram2);
    RAM512(in=in, load=loadram3, address=address[0..8], out=outram3);
    RAM512(in=in, load=loadram4, address=address[0..8], out=outram4);
    RAM512(in=in, load=loadram5, address=address[0..8], out=outram5);
    RAM512(in=in, load=loadram6, address=address[0..8], out=outram6);
    RAM512(in=in, load=loadram7, address=address[0..8], out=outram7);
	
    // output the content of the register at RAM512 at "address"
    Mux8Way16(a=outram0, b=outram1, c=outram2, d=outram3, e=outram4, f=outram5, g=outram6, h=outram7, sel=address[9..11], out=out);
	
}